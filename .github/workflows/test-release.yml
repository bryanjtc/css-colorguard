name: Test release

on:
  pull_request:
      branches:
          - master

jobs:
    build:
      runs-on: ubuntu-latest
      steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with :
          fetch-depth: 0
          ref: ${{ github.head_ref }}
      - name: Install pnpm
        run: corepack enable pnpm
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'pnpm'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.YARN_TOKEN }}
      - name: Install dependencies
        run: pnpm install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.YARN_TOKEN }}
      - name: Build
        run: |
          pnpm -F=semantic-release-github-cjs build
          pnpm -F=postcss-colorguard build  
          pnpm -F=colorguard-processor build
          pnpm -F=colorguard-cli build
        env:
          NODE_AUTH_TOKEN: ${{ secrets.YARN_TOKEN }}
      - name: Semantic Release dry run
        id: dry-release
        run: |
          unset GITHUB_ACTIONS 
          pnpm -F=postcss-colorguard semantic-release --dry-run --no-ci --branches ${HEAD_REF}
          pnpm -F=postcss-processor semantic-release --dry-run --no-ci --branches ${HEAD_REF}
          pnpm -F=postcss-cli semantic-release --dry-run --no-ci --branches ${HEAD_REF}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HEAD_REF: ${{ github.head_ref }}
          NODE_AUTH_TOKEN: ${{ secrets.YARN_TOKEN }}
